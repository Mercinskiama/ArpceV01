# Generated by Django 3.2.16 on 2023-10-23 12:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ErpBackOffice', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('ModuleConfiguration', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Model_Categorie_tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250, verbose_name='Désignation')),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, max_length=550, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_categorie_tags', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': "Catégorie d'étiquette",
                'verbose_name_plural': "Catégories d'étiquette",
                'db_table': 'categorie_tag',
            },
        ),
        migrations.CreateModel(
            name='Model_Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250, verbose_name='Désignation')),
                ('type', models.IntegerField(choices=[(1, 'Fichier'), (2, 'URL')], default=1, verbose_name='Type')),
                ('taille', models.IntegerField(blank=True, null=True, verbose_name='Taille de Fichier')),
                ('type_mime', models.IntegerField(choices=[(1, 'txt'), (2, 'pdf'), (3, 'word'), (4, 'pptx'), (5, 'image')], default=1, verbose_name='Type Mime')),
                ('mime', models.CharField(max_length=250, verbose_name='Mime')),
                ('res_field', models.CharField(blank=True, max_length=250, null=True, verbose_name='Champs Ressource')),
                ('res_id', models.IntegerField(blank=True, null=True, verbose_name='Id Ressource')),
                ('est_public', models.BooleanField(default=True, verbose_name='Est public')),
                ('est_archive', models.BooleanField(default=False, verbose_name='Est archivé')),
                ('est_bloque', models.BooleanField(default=False, verbose_name='Est bloqué ')),
                ('access_token', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Token accès')),
                ('url', models.CharField(blank=True, max_length=250, null=True, verbose_name='URL')),
                ('description', models.CharField(blank=True, max_length=550, null=True, verbose_name='Description')),
                ('indexation', models.CharField(blank=True, max_length=4000, null=True, verbose_name='Contenu indexé')),
                ('fichier', models.FileField(upload_to='uploads/%Y/%m/%d/', verbose_name='Fichier')),
                ('miniature', models.FileField(upload_to='uploads/%Y/%m/%d/', verbose_name='Miniature')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_documents', to='ErpBackOffice.model_personne')),
                ('auteur_blocage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents_bloques', to='ErpBackOffice.model_personne', verbose_name='Bloqué par')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='Model_Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250, verbose_name='Désignation')),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Code')),
                ('couleur', models.CharField(blank=True, max_length=100, null=True, verbose_name='Couleur')),
                ('description', models.CharField(blank=True, max_length=550, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_tags', to='ErpBackOffice.model_personne')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tags_categorie', to='ModuleArchivage.model_categorie_tag', verbose_name='Catégorie')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape')),
            ],
            options={
                'verbose_name': 'Etiquette',
                'verbose_name_plural': 'Etiquettes',
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Model_Dossier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250, verbose_name='Désignation')),
                ('sequence', models.CharField(blank=True, max_length=100, null=True, verbose_name='Séquence')),
                ('description', models.CharField(blank=True, max_length=550, null=True, verbose_name='Description')),
                ('owner_read', models.BooleanField(default=True, verbose_name='Lire Documents personnels seulement')),
                ('est_racine', models.BooleanField(default=False, verbose_name='Est dossier racine')),
                ('est_archivage', models.BooleanField(default=False, verbose_name='Est dossier archivage')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_dossiers', to='ErpBackOffice.model_personne')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dossiers_fils', to='ModuleArchivage.model_dossier', verbose_name='Dossier parent')),
                ('read_groups', models.ManyToManyField(related_name='dossiers_reads', to='ErpBackOffice.Model_GroupePermission', verbose_name='Accès en lecture')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape')),
                ('write_groups', models.ManyToManyField(related_name='dossiers_writes', to='ErpBackOffice.Model_GroupePermission', verbose_name='Accès en écriture')),
            ],
            options={
                'verbose_name': 'Dossier',
                'verbose_name_plural': 'Dossiers',
                'db_table': 'dossier',
            },
        ),
        migrations.CreateModel(
            name='Model_Document_partage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250, verbose_name='Désignation')),
                ('type', models.IntegerField(choices=[(1, 'Liste de documents'), (2, 'Domaine')], default=1, verbose_name='Type de partage')),
                ('url', models.CharField(blank=True, max_length=250, null=True, verbose_name='URL')),
                ('date_echeance', models.DateTimeField(blank=True, null=True, verbose_name="Date d'échéance")),
                ('description', models.CharField(blank=True, max_length=550, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_partages', to='ErpBackOffice.model_personne')),
                ('documents', models.ManyToManyField(to='ModuleArchivage.Model_Document', verbose_name='Documents')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape')),
            ],
            options={
                'verbose_name': 'Lien partagé',
                'verbose_name_plural': 'Liens partagés',
                'db_table': 'document_partage',
            },
        ),
        migrations.CreateModel(
            name='Model_Document_archivage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auteur_archivages', to='ErpBackOffice.model_personne')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archivages', to='ModuleArchivage.model_document', verbose_name='Document')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
            ],
            options={
                'db_table': 'document_archivage',
            },
        ),
        migrations.AddField(
            model_name='model_document',
            name='dossier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='ModuleArchivage.model_dossier', verbose_name='Dossier'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='favoris',
            field=models.ManyToManyField(to='ErpBackOffice.Model_Personne', verbose_name='Favoris'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='res_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='Modèle Ressource'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='tags',
            field=models.ManyToManyField(to='ModuleArchivage.Model_Tag', verbose_name='Etiquettes'),
        ),
        migrations.AddField(
            model_name='model_categorie_tag',
            name='dossier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categorie_tags', to='ModuleArchivage.model_dossier', verbose_name='Dossier'),
        ),
        migrations.AddField(
            model_name='model_categorie_tag',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_categorie_tag',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape'),
        ),
    ]
