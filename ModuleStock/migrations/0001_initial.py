# Generated by Django 3.2.16 on 2024-02-19 16:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ErpBackOffice', '0001_initial'),
        ('ModuleConfiguration', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Model_Actif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_serie', models.CharField(blank=True, db_column='code', max_length=50, null=True, verbose_name='Numéro de série')),
                ('est_actif', models.BooleanField(db_column='is_active', default=True, verbose_name='Est actif')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
            ],
            options={
                'verbose_name': 'Actif',
                'verbose_name_plural': 'Actifs',
                'db_table': 'stk_active',
            },
        ),
        migrations.CreateModel(
            name='Model_Ajustement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, db_column='code', max_length=100, null=True, verbose_name='Référence')),
                ('date', models.DateTimeField(auto_now_add=True, db_column='date', verbose_name='Date')),
                ('inventaire_de', models.IntegerField(blank=True, db_column='ajustment_inventory', null=True, verbose_name='Inventaire de')),
                ('document', models.CharField(blank=True, db_column='document', max_length=100, null=True, verbose_name='Document')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ajustements', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Inventaire',
                'verbose_name_plural': 'Inventaires',
                'db_table': 'stk_inventory',
            },
        ),
        migrations.CreateModel(
            name='Model_Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Désignation', max_length=100, null=True, verbose_name='Designation')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=20, null=True, verbose_name='Code')),
                ('amount', models.FloatField(blank=True, db_column='amount', default=0.0, null=True, verbose_name='Prix unitaire')),
                ('picture_icon', models.ImageField(blank=True, db_column='picture_icon', null=True, upload_to='', verbose_name='Image')),
                ('quota_quantity', models.IntegerField(blank=True, db_column='quota_quantity', default=0.0, null=True, verbose_name='Quantité seuil')),
                ('description', models.CharField(blank=True, db_column='description', max_length=500, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_articles', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'db_table': 'stk_product',
            },
        ),
        migrations.CreateModel(
            name='Model_Bon_reception',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=100, null=True, verbose_name='Code reception')),
                ('description', models.CharField(blank=True, db_column='description', default='', max_length=300, null=True, verbose_name='Description')),
                ('date_prevue', models.DateTimeField(auto_now_add=True, db_column='date', verbose_name='Date')),
                ('bon_livraison', models.FileField(blank=True, max_length=25, null=True, upload_to='media', verbose_name="Document d'Origine")),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_bon_receptions', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Bon de Reception',
                'verbose_name_plural': 'Bons de Receptions',
                'db_table': 'stk_receipt_slip',
            },
        ),
        migrations.CreateModel(
            name='Model_Bon_retour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=100, null=True, verbose_name='Code Transfert')),
                ('date_realisation', models.DateTimeField(blank=True, db_column='date_return', null=True, verbose_name='Date de retour')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('est_realisee', models.BooleanField(db_column='is_realise', default=False, verbose_name='Est realisee')),
                ('quantite', models.IntegerField(db_column='quantity', default=0, verbose_name='Quantité')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('description', models.CharField(blank=True, db_column='description', default='', max_length=100, null=True, verbose_name='description')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('agent', models.ForeignKey(blank=True, db_column='Agent', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_charge_du_bon_retour', to='ErpBackOffice.model_personne', verbose_name='Agent')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_bon_retour', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Bon de Retour',
                'verbose_name_plural': 'Bons de Retours',
                'db_table': 'stk_return_bon',
            },
        ),
        migrations.CreateModel(
            name='Model_Bon_sortie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=100, null=True, verbose_name='Code Transfert')),
                ('description', models.CharField(blank=True, db_column='description', default='', max_length=300, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_bon_sorties', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Bon de Sortie',
                'verbose_name_plural': 'Bons de Sorties',
                'db_table': 'stk_output',
            },
        ),
        migrations.CreateModel(
            name='Model_Bon_transfert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=100, null=True, verbose_name='Code transfert')),
                ('description', models.CharField(blank=True, db_column='description', default='', max_length=300, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=100, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_transfert_stocks', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Bon de Transfert',
                'verbose_name_plural': 'Bons de Transferts',
                'db_table': 'stk_bon_transfer',
            },
        ),
        migrations.CreateModel(
            name='Model_Emplacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, db_column='name', max_length=100, null=True, verbose_name='Designation')),
                ('designation_court', models.CharField(blank=True, db_column='short_name', max_length=100, null=True, verbose_name='Designation courte')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=20, null=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, db_column='description', max_length=510, null=True, verbose_name='Description')),
                ('defaut', models.BooleanField(db_column='is_default', default=False, verbose_name='Est défaut')),
                ('visible', models.BooleanField(db_column='is_visible', default=True, verbose_name='Est visible')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_emplacements', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Emplacement',
                'verbose_name_plural': 'Emplacements',
                'db_table': 'stk_location',
            },
        ),
        migrations.CreateModel(
            name='Model_Unite_mesure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='name', max_length=100, null=True, verbose_name='Designation')),
                ('short_name', models.CharField(blank=True, db_column='short_name', max_length=100, null=True, verbose_name='Symbole')),
                ('description', models.CharField(blank=True, db_column='description', max_length=510, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_unite_mesures', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_unite_mesures', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Unité de mesure',
                'verbose_name_plural': 'Unités de mesure',
                'db_table': 'stk_measure_unit',
            },
        ),
        migrations.CreateModel(
            name='Model_Type_mvt_stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, db_column='name', max_length=50, null=True, verbose_name='Designation')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_type_mvt_stocks', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_type_mvt_stocks', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Type de mouvement stock',
                'verbose_name_plural': 'Types de mouvement stock',
                'db_table': 'stk_stock_movement_type',
            },
        ),
        migrations.CreateModel(
            name='Model_Type_emplacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=20, null=True, verbose_name='Code')),
                ('designation', models.CharField(db_column='name', max_length=255, verbose_name='Designation')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_type_emplacements', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_type_emplacements', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': "Type d'emplacement",
                'verbose_name_plural': "Types d'emplacement",
                'db_table': 'stk_location_type',
            },
        ),
        migrations.CreateModel(
            name='Model_Type_article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(db_column='name', max_length=255, verbose_name='Designation')),
                ('est_service', models.BooleanField(db_column='is_service', default=False, verbose_name='Est service')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_type_articles', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_type_articles', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': "Type d'Article",
                'verbose_name_plural': "Types d'Articles",
                'db_table': 'stk_product_type',
            },
        ),
        migrations.CreateModel(
            name='Model_Stockage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.FloatField(default=0.0, verbose_name='Quantité')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stockages', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_stockages', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('emplacement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stockages', to='ModuleStock.model_emplacement', verbose_name='Emplacement')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('unite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stockages', to='ModuleStock.model_unite_mesure', verbose_name='Unité de mesure')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_stockages', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Stockage',
                'verbose_name_plural': 'Stockages',
                'db_table': 'stk_storage',
            },
        ),
        migrations.CreateModel(
            name='Model_Statut_operation_stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, db_column='name', max_length=50, null=True, verbose_name='Designation')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_statut_operation_stocks', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_statut_operation_stocks', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': "Statut d'opération stock",
                'verbose_name_plural': "Statuts d'opération stock",
                'db_table': 'stk_stock_transaction_status',
            },
        ),
        migrations.CreateModel(
            name='Model_Statut_ajustement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, db_column='code', max_length=100, null=True, verbose_name='Designation')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_statut_ajustements', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_statut_ajustements', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Statut inventaire',
                'verbose_name_plural': 'Statuts inventaire',
                'db_table': 'stk_inventory_status',
            },
        ),
        migrations.CreateModel(
            name='Model_Rebut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(blank=True, db_column='code', max_length=25, null=True, verbose_name='Numéro')),
                ('date', models.DateTimeField(auto_now_add=True, db_column='date', verbose_name='Date')),
                ('serie_article', models.CharField(blank=True, db_column='series', max_length=50, null=True, verbose_name='Numero Série')),
                ('quantite', models.FloatField(db_column='quantity', default=0, verbose_name='Quantité')),
                ('document', models.CharField(blank=True, db_column='document', max_length=500, null=True, verbose_name="Document d'origine")),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('article', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rebuts', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_rebuts', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('emplacement_origine', models.ForeignKey(blank=True, db_column='original_location', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emplacement_rebut', to='ModuleStock.model_emplacement', verbose_name="Emplacement d'origine")),
                ('emplacement_rebut', models.ForeignKey(blank=True, db_column='rebut_location', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emplacement_rebut_destination', to='ModuleStock.model_emplacement', verbose_name='Emplacement rébut')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('status', models.ForeignKey(blank=True, db_column='status_rebut', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_rebut', to='ModuleStock.model_statut_operation_stock', verbose_name='Status')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('unite', models.ForeignKey(blank=True, db_column='measure_unit', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rebuts', to='ModuleStock.model_unite_mesure', verbose_name='Unité de mesure')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_rebuts', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Rebut',
                'verbose_name_plural': 'Rebuts',
                'db_table': 'stk_rebut',
            },
        ),
        migrations.CreateModel(
            name='Model_Operation_stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, db_column='name', max_length=50, null=True, verbose_name='Designation')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_operation_stocks', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_operation_stocks', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Opération stock',
                'verbose_name_plural': 'Opérations stock',
                'db_table': 'stk_stock_transaction',
            },
        ),
        migrations.CreateModel(
            name='Model_Mvt_stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, db_column='date', verbose_name='Date')),
                ('quantite_initiale', models.FloatField(db_column='quantity_initial', default=0, verbose_name='Quantité Initiale')),
                ('quantite', models.FloatField(db_column='quantity_final', default=0, verbose_name='Quantité finale')),
                ('est_rebut', models.BooleanField(db_column='is_scum', default=False, verbose_name='Est rebut')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('ajustement', models.ForeignKey(blank=True, db_column='adjustment', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ajustement_mvts_stocks', to='ModuleStock.model_ajustement', verbose_name='Inventaire')),
                ('article', models.ForeignKey(db_column='product', on_delete=django.db.models.deletion.CASCADE, related_name='type_mvts_stocks', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_mvt_stocks', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('emplacement', models.ForeignKey(db_column='location', on_delete=django.db.models.deletion.CASCADE, related_name='emplacement_mvts_stocks', to='ModuleStock.model_emplacement', verbose_name='Emplacement')),
                ('rebut', models.ForeignKey(blank=True, db_column='scum', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rebut_mvts_stocks', to='ModuleStock.model_rebut', verbose_name='Rebut')),
                ('reception', models.ForeignKey(blank=True, db_column='receipt', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reception_mvts_stocks', to='ModuleStock.model_bon_reception', verbose_name='Réception')),
                ('retour', models.ForeignKey(blank=True, db_column='return', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retour_mvts_stocks', to='ModuleStock.model_bon_retour', verbose_name='Retour')),
                ('series', models.ManyToManyField(db_column='series', to='ModuleStock.Model_Actif', verbose_name='Numéros de serie')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('sortie', models.ForeignKey(blank=True, db_column='output', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sortie_mvts_stocks', to='ModuleStock.model_bon_sortie', verbose_name='Sortie')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('transfert', models.ForeignKey(blank=True, db_column='transfer', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfert_mvts_stocks', to='ModuleStock.model_bon_transfert', verbose_name='Transfert')),
                ('type', models.ForeignKey(db_column='type', on_delete=django.db.models.deletion.CASCADE, related_name='date_mvts_stocks', to='ModuleStock.model_type_mvt_stock', verbose_name='Type mouvement')),
                ('unite', models.ForeignKey(blank=True, db_column='unit_final', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unite_mvts_stocks_unites_finales', to='ModuleStock.model_unite_mesure', verbose_name='Unité de mesure finale')),
                ('unite_initiale', models.ForeignKey(blank=True, db_column='unit_initial', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qte_mvts_stocks_unites_initials', to='ModuleStock.model_unite_mesure', verbose_name='Unité de mesure initiale')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_mvt_stocks', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Mouvement stock',
                'verbose_name_plural': 'Mouvements stocks',
                'db_table': 'stk_stock_movement',
            },
        ),
        migrations.CreateModel(
            name='Model_Ligne_reception',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demandee', models.FloatField(db_column='quantity_requested', default=0, verbose_name='Quantité demandée')),
                ('quantite_fait', models.FloatField(blank=True, db_column='quantity_produced', default=0, null=True, verbose_name='Quantité réalisée')),
                ('quantite_reste', models.FloatField(blank=True, db_column='quantity_rest', default=0, null=True, verbose_name='Quantité restante')),
                ('prix_unitaire', models.FloatField(blank=True, db_column='price_unit', default=0, null=True, verbose_name='Prix Unitaire')),
                ('description', models.CharField(blank=True, db_column='description', max_length=500, null=True, verbose_name='Description')),
                ('fait', models.BooleanField(db_column='is_realised', default=False, verbose_name='Est réalisé')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('article', models.ForeignKey(db_column='product', on_delete=django.db.models.deletion.CASCADE, related_name='lignes_article_reception', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_ligne_receptions', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('bon_reception', models.ForeignKey(db_column='inventory_operation', on_delete=django.db.models.deletion.CASCADE, related_name='lignes_bon_reception', to='ModuleStock.model_bon_reception', verbose_name='Opération stock')),
                ('devise', models.ForeignKey(blank=True, db_column='currency_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lignes_bon_reception', to='ErpBackOffice.model_devise', verbose_name='Devise')),
                ('series', models.ManyToManyField(db_column='series', to='ModuleStock.Model_Actif', verbose_name='Numéros de serie')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('unite', models.ForeignKey(blank=True, db_column='measure_unit', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lignes_bon_reception', to='ModuleStock.model_unite_mesure', verbose_name='Unité de mesure')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_ligne_receptions', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Line Bon de Reception',
                'verbose_name_plural': 'Lines Bons de Receptions',
                'db_table': 'stk_line_receipt',
            },
        ),
        migrations.CreateModel(
            name='Model_Ligne_bon_transfert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.FloatField(db_column='quantity_requested', default=0, verbose_name='Quantité fournie')),
                ('quantite_fait', models.FloatField(blank=True, db_column='quantite_transfer', default=0, null=True, verbose_name='Quantité transferée')),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('fait', models.BooleanField(db_column='is_realised', default=False, verbose_name='Est réalisé')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('article', models.ForeignKey(db_column='product', on_delete=django.db.models.deletion.CASCADE, related_name='lignes_article_transfert', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_ligne_transferts', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('bon_transfert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_of_bon_commande', to='ModuleStock.model_bon_transfert')),
                ('series', models.ManyToManyField(db_column='series', to='ModuleStock.Model_Actif', verbose_name='Numéros de serie')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('stockage', models.ForeignKey(blank=True, db_column='storage', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_transfere_take_on_stockage', to='ModuleStock.model_stockage', verbose_name='stockage')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_ligne_ligne_transferts', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Line bon de Transfert',
                'verbose_name_plural': 'Lines Bons de Transferts',
                'db_table': 'stk_line_bon_transfer',
            },
        ),
        migrations.CreateModel(
            name='Model_Ligne_bon_sortie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demandee', models.FloatField(blank=True, db_column='quantity', default=0, null=True, verbose_name='Quantité')),
                ('quantite_sortie', models.FloatField(blank=True, db_column='quantity_out', default=0, null=True, verbose_name='Quantité Sortie')),
                ('description', models.CharField(blank=True, db_column='description', default='', max_length=100, null=True, verbose_name='description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('article', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_lines_sortie', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_line_bon_sortie', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('bon_sortie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bon_sortie_lines', to='ModuleStock.model_bon_sortie', verbose_name='Bon_transfert')),
                ('serie', models.ForeignKey(blank=True, db_column='series', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_line_sorties', to='ModuleStock.model_actif', verbose_name='Numéros de serie')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('stockage', models.ForeignKey(blank=True, db_column='storage', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_bon_sortie_take_on_stockage', to='ModuleStock.model_stockage', verbose_name='stockage')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_line_sortie', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Line Bon de Sortie',
                'verbose_name_plural': 'Lines Bons de Sorties',
                'db_table': 'stk_line_output',
            },
        ),
        migrations.CreateModel(
            name='Model_Ligne_bon_retour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_fournie', models.IntegerField(db_column='quantity', default=0, verbose_name='Quantité')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('numero_serie', models.CharField(blank=True, db_column='numero_serie', default='', max_length=100, null=True, verbose_name='Numero Serie')),
                ('description', models.CharField(blank=True, db_column='description', default='', max_length=100, null=True, verbose_name='description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('article', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_lines_retour', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_line_bon_retour', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('bon_retour', models.ForeignKey(blank=True, db_column='return_bon', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_of_bon_retour', to='ModuleStock.model_bon_retour', verbose_name='Bon de Retour')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('stock_article', models.ForeignKey(blank=True, db_column='stockage', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_bon_retour_take_on_Stockage_article', to='ModuleStock.model_stockage', verbose_name='Stockage')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateurs_line_retour', to='ErpBackOffice.model_personne', verbose_name='Modifier par')),
            ],
            options={
                'verbose_name': 'Bon de line Retour',
                'verbose_name_plural': 'Lines Bons de Retours',
                'db_table': 'stk_return_line_bon',
            },
        ),
        migrations.CreateModel(
            name='Model_Ligne_ajustement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_theorique', models.FloatField(db_column='quantity_theoretical', default=0, verbose_name='Quantité théorique')),
                ('quantite_reelle', models.FloatField(blank=True, db_column='quantity_actual', default=0, null=True, verbose_name='Quantité réelle')),
                ('fait', models.BooleanField(db_column='is_done', default=False, verbose_name='Est fait')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('ajustement', models.ForeignKey(db_column='ajustment', on_delete=django.db.models.deletion.CASCADE, related_name='ligne_ajustement', to='ModuleStock.model_ajustement', verbose_name='Inventaire')),
                ('article', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lignes_ajustements', to='ModuleStock.model_article', verbose_name='Article')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_ajustements', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('series', models.ManyToManyField(db_column='series', to='ModuleStock.Model_Actif', verbose_name='Séries')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('unite', models.ForeignKey(blank=True, db_column='unit', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lignes_ajustements', to='ModuleStock.model_unite_mesure', verbose_name='Unité')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_ligne_ajustements', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Ligne Inventaire',
                'verbose_name_plural': 'Lignes Inventaires',
                'db_table': 'stk_inventory_line',
            },
        ),
        migrations.AddField(
            model_name='model_emplacement',
            name='type_emplacement',
            field=models.ForeignKey(blank=True, db_column='location_type', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emplacements', to='ModuleStock.model_type_emplacement', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='model_emplacement',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_emplacements', to='ErpBackOffice.model_personne'),
        ),
        migrations.CreateModel(
            name='Model_Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='name', max_length=100, null=True, verbose_name='Designation')),
                ('short_name', models.CharField(blank=True, db_column='short_name', max_length=100, null=True, verbose_name='Designation courte')),
                ('code', models.CharField(blank=True, db_column='code', default='', max_length=20, null=True, verbose_name='Code')),
                ('description', models.CharField(blank=True, db_column='description', max_length=510, null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_categories', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_categories', to='ErpBackOffice.model_personne')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'db_table': 'stk_category',
            },
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='emplacement_destination',
            field=models.ForeignKey(blank=True, db_column='destination_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_destination_transfert', to='ModuleStock.model_emplacement', verbose_name='Emplacement Destination'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='emplacement_origine',
            field=models.ForeignKey(blank=True, db_column='original_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_origin_transfert', to='ModuleStock.model_emplacement', verbose_name='Emplacement Origine'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='operation_stock',
            field=models.ForeignKey(blank=True, db_column='stock_operating', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operration_stock_transfert', to='ModuleStock.model_operation_stock', verbose_name='Opération Stock'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='responsable_transfert',
            field=models.ForeignKey(blank=True, db_column='Transfert_Manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandeur_doing_bon_transfert', to='ErpBackOffice.model_personne', verbose_name='Responsable Transfert'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='status',
            field=models.ForeignKey(blank=True, db_column='operation_status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations_status_transfert', to='ModuleStock.model_statut_operation_stock', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status_wkf', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_ligne_transfert_stocks', to='ErpBackOffice.model_personne'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='emplacement_destination',
            field=models.ForeignKey(blank=True, db_column='destination_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_destination_bon_sorties', to='ModuleStock.model_emplacement', verbose_name='Emplacement Destination'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='emplacement_origine',
            field=models.ForeignKey(blank=True, db_column='original_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_origin_bon_sorties', to='ModuleStock.model_emplacement', verbose_name='Emplacement Origine'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='employe',
            field=models.ForeignKey(blank=True, db_column='employe', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_stock_bon_sorties', to='ErpBackOffice.model_personne', verbose_name='Employé'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='operation_stock',
            field=models.ForeignKey(blank=True, db_column='stock_operating', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operration_stock_sorties', to='ModuleStock.model_operation_stock', verbose_name='Opération Stock'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='status',
            field=models.ForeignKey(blank=True, db_column='operation_status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations_status_bon_sorties', to='ModuleStock.model_statut_operation_stock', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_sortie',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_bon_sorties', to='ErpBackOffice.model_personne'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='emplacement_destination',
            field=models.ForeignKey(blank=True, db_column='destination_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_destination_retours', to='ModuleStock.model_emplacement', verbose_name='Emplacement Destination'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='emplacement_origine',
            field=models.ForeignKey(blank=True, db_column='original_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_origin_bon_retours', to='ModuleStock.model_emplacement', verbose_name='Emplacement Origine'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='operation_stock',
            field=models.ForeignKey(blank=True, db_column='stock_operating', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation_stock_bon_retours', to='ModuleStock.model_operation_stock', verbose_name='Opération Stock'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='responsable_retour',
            field=models.ForeignKey(blank=True, db_column='Responsable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandeur_doing_bon_retour', to='ErpBackOffice.model_personne', verbose_name='Responsable'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='status',
            field=models.ForeignKey(blank=True, db_column='operation_status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations_status_bon_retour', to='ModuleStock.model_statut_operation_stock', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_retour',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_bon_retours', to='ErpBackOffice.model_personne', verbose_name='Modifier par'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='emplacement_destination',
            field=models.ForeignKey(blank=True, db_column='destination_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_destination_reception', to='ModuleStock.model_emplacement', verbose_name='Emplacement Destination'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='emplacement_origine',
            field=models.ForeignKey(blank=True, db_column='original_location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_origin_reception', to='ModuleStock.model_emplacement', verbose_name='Emplacement Origine'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='employe',
            field=models.ForeignKey(blank=True, db_column='employe', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_stock_receptions', to='ErpBackOffice.model_personne', verbose_name='Employé'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='operation_stock',
            field=models.ForeignKey(blank=True, db_column='stock_operating', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operration_stock_reception', to='ModuleStock.model_operation_stock', verbose_name='Opération Stock'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='status',
            field=models.ForeignKey(blank=True, db_column='operation_status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations_status_receipt', to='ModuleStock.model_statut_operation_stock', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_bon_receptions', to='ErpBackOffice.model_personne'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='category',
            field=models.ForeignKey(blank=True, db_column='category', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleStock.model_categorie', verbose_name='Catégorie'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='devise',
            field=models.ForeignKey(blank=True, db_column='currency_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_devise', verbose_name='Devise'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='measure_unit',
            field=models.ForeignKey(blank=True, db_column='measure_unit', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produits_unit', to='ModuleStock.model_unite_mesure', verbose_name='Unité de mesure'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='type_article',
            field=models.ForeignKey(blank=True, db_column='product_type', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='ModuleStock.model_type_article', verbose_name="Type d'article"),
        ),
        migrations.AddField(
            model_name='model_article',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_articles', to='ErpBackOffice.model_personne'),
        ),
        migrations.AddField(
            model_name='model_ajustement',
            name='emplacement',
            field=models.ForeignKey(db_column='location', on_delete=django.db.models.deletion.CASCADE, related_name='ajustements', to='ModuleStock.model_emplacement', verbose_name='Emplacement'),
        ),
        migrations.AddField(
            model_name='model_ajustement',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_ajustement',
            name='status',
            field=models.ForeignKey(blank=True, db_column='ajustment_status', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ajustements', to='ModuleStock.model_statut_ajustement', verbose_name='Status Ajustement'),
        ),
        migrations.AddField(
            model_name='model_ajustement',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_ajustement',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_ajustements', to='ErpBackOffice.model_personne'),
        ),
        migrations.AddField(
            model_name='model_actif',
            name='article',
            field=models.ForeignKey(db_column='product', on_delete=django.db.models.deletion.CASCADE, related_name='series_articles', to='ModuleStock.model_article', verbose_name='Article'),
        ),
        migrations.AddField(
            model_name='model_actif',
            name='auteur',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_actifs', to='ErpBackOffice.model_personne', verbose_name='Créé par'),
        ),
        migrations.AddField(
            model_name='model_actif',
            name='emplacement',
            field=models.ForeignKey(blank=True, db_column='location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='series_articles', to='ModuleStock.model_emplacement', verbose_name='Emplacement'),
        ),
        migrations.AddField(
            model_name='model_actif',
            name='societe',
            field=models.ForeignKey(blank=True, db_column='company_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='model_actif',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_actif',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_actifs', to='ErpBackOffice.model_personne'),
        ),
    ]
