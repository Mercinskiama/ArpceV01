# Generated by Django 3.2.16 on 2023-09-29 05:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('ErpBackOffice', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Model_Adresse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=250, verbose_name='Nom')),
                ('type_adresse', models.IntegerField(choices=[(1, 'Contact'), (2, 'Adresse personnelle'), (2, 'Adresse de facturation'), (2, 'Adresse de livraison'), (2, 'Autre adresse')], db_column='type', default=1, verbose_name='Type')),
                ('adress_line1', models.CharField(blank=True, db_column='street', max_length=100, null=True, verbose_name='Adresse ligne 1')),
                ('adress_line2', models.CharField(blank=True, db_column='street2', max_length=100, null=True, verbose_name='Adresse ligne 2')),
                ('code_postal', models.CharField(blank=True, db_column='zip_code', max_length=100, null=True, verbose_name='Code Postal')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Autres informations')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
            ],
            options={
                'verbose_name': 'Adresse',
                'verbose_name_plural': 'Adresses',
                'db_table': 'cnf_address',
            },
        ),
        migrations.CreateModel(
            name='Model_Commune',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_communes', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_communes', to='ErpBackOffice.model_personne', verbose_name='modifié par')),
            ],
            options={
                'verbose_name': 'Commune',
                'verbose_name_plural': 'Communes',
                'db_table': 'cnf_township',
            },
        ),
        migrations.CreateModel(
            name='Model_Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=250, verbose_name='Noms')),
                ('type', models.IntegerField(choices=[(1, 'Individu'), (2, 'Société')], db_column='company_type', default=1, verbose_name='Type Personne')),
                ('nature', models.CharField(blank=True, db_column='nature', max_length=250, null=True, verbose_name='Nature')),
                ('email', models.EmailField(blank=True, db_column='email', max_length=250, null=True, verbose_name='Courriel')),
                ('siteweb', models.CharField(blank=True, db_column='website', max_length=250, null=True, verbose_name='Site web')),
                ('function', models.CharField(blank=True, db_column='function', max_length=250, null=True, verbose_name='Fonction')),
                ('adress_line1', models.CharField(blank=True, db_column='street', max_length=100, null=True, verbose_name='Adresse ligne 1')),
                ('adress_line2', models.CharField(blank=True, db_column='street2', max_length=100, null=True, verbose_name='Adresse ligne 2')),
                ('phone_number', models.CharField(blank=True, db_column='phone', max_length=100, null=True, verbose_name='Téléphone')),
                ('phone_number_2', models.CharField(blank=True, db_column='mobile', max_length=100, null=True, verbose_name='Mobile')),
                ('code_postal', models.CharField(blank=True, db_column='zip_code', max_length=100, null=True, verbose_name='Code Postal')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Autres informations')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': 'cnf_contact',
            },
        ),
        migrations.CreateModel(
            name='Model_Pays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='Nom')),
                ('code', models.CharField(db_column='code', max_length=20, verbose_name='Code')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_pays', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_pays', to='ErpBackOffice.model_personne', verbose_name='modifié par')),
            ],
            options={
                'verbose_name': 'Pays',
                'verbose_name_plural': 'Pays',
                'db_table': 'cnf_country',
            },
        ),
        migrations.CreateModel(
            name='Model_Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_provinces', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('country', models.ForeignKey(blank=True, db_column='country', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='ModuleConfiguration.model_pays', verbose_name='Pays')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_provinces', to='ErpBackOffice.model_personne', verbose_name='modifié par')),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Provinces',
                'db_table': 'cnf_state',
            },
        ),
        migrations.CreateModel(
            name='Model_Societe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_column='code', max_length=20, verbose_name='Code')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='Nom de la société')),
                ('picture_icon', models.ImageField(blank=True, db_column='picture_icon', null=True, upload_to='', verbose_name='Logo de la société')),
                ('type', models.CharField(blank=True, db_column='type', max_length=100, null=True, verbose_name='Type')),
                ('adress_email', models.EmailField(blank=True, db_column='email', max_length=100, null=True, verbose_name='Email')),
                ('siteweb', models.CharField(blank=True, db_column='website', max_length=100, null=True, verbose_name='Genre')),
                ('pays_adress', models.CharField(blank=True, db_column='adress_country', max_length=100, null=True, verbose_name='Nom Pays')),
                ('province_adress', models.CharField(blank=True, db_column='adress_state', max_length=100, null=True, verbose_name='Nom Province')),
                ('ville_adress', models.CharField(blank=True, db_column='adress_city', max_length=100, null=True, verbose_name='Nom Ville')),
                ('adresse_line1', models.CharField(blank=True, db_column='adress_line1', max_length=100, null=True, verbose_name='Adresse ligne 1')),
                ('adresse_line2', models.CharField(blank=True, db_column='adress_line2', max_length=100, null=True, verbose_name='Adresse ligne 2')),
                ('telephone_1', models.CharField(blank=True, db_column='phone_number1', max_length=100, null=True, verbose_name='Téléphone 1')),
                ('telephone_2', models.CharField(blank=True, db_column='phone_number2', max_length=100, null=True, verbose_name='Téléphone 2')),
                ('nbr_periode_gl', models.IntegerField(blank=True, db_column='nbr_periode_gl', default=12, null=True, verbose_name='Nombre période Comptabilité')),
                ('nbr_periode_ar', models.IntegerField(blank=True, db_column='nbr_periode_ar', default=12, null=True, verbose_name='Nombre période Comptabilité Client')),
                ('nbr_periode_ap', models.IntegerField(blank=True, db_column='nbr_periode_ap', default=12, null=True, verbose_name='Nombre période Comptabilité Fournisseur')),
                ('nbr_periode_cm', models.IntegerField(blank=True, db_column='nbr_periode_cm', default=12, null=True, verbose_name='Nombre période Comptabilité Trésorerie ')),
                ('nbr_periode_fa', models.IntegerField(blank=True, db_column='nbr_periode_fa', default=12, null=True, verbose_name='Nombre période Comptabilité Immobilisation')),
                ('nbr_periode_bgt', models.IntegerField(blank=True, db_column='nbr_periode_bgt', default=12, null=True, verbose_name='Nombre période Budget')),
                ('nbr_periode_py', models.IntegerField(blank=True, db_column='nbr_periode_py', default=12, null=True, verbose_name='Nombre période Paie')),
                ('period_begin_date', models.DateTimeField(blank=True, db_column='period_begin_date', null=True, verbose_name='Début exercice en cours')),
                ('period_end_date', models.DateTimeField(blank=True, db_column='period_end_date', null=True, verbose_name='Fin Exercice en cours')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_societes', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('autres_adresses', models.ManyToManyField(db_column='others_adresses', to='ModuleConfiguration.Model_Adresse', verbose_name='Autres adresse')),
                ('commune', models.ForeignKey(blank=True, db_column='township_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_commune', verbose_name='Commune')),
                ('contacts', models.ManyToManyField(db_column='contacts', to='ModuleConfiguration.Model_Contact', verbose_name='Contacts')),
                ('devise', models.ForeignKey(blank=True, db_column='currency_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='societes', to='ErpBackOffice.model_devise', verbose_name='Devise de référence')),
                ('parent', models.ForeignKey(blank=True, db_column='parent_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société mère')),
                ('pays', models.ForeignKey(blank=True, db_column='country_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_pays', verbose_name='Pays')),
                ('province', models.ForeignKey(blank=True, db_column='province_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_province', verbose_name='Province')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Société',
                'verbose_name_plural': 'Sociétés',
                'db_table': 'cnf_company',
            },
        ),
        migrations.CreateModel(
            name='Model_Ville',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_villes', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('province', models.ForeignKey(blank=True, db_column='province', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='villes', to='ModuleConfiguration.model_province', verbose_name='Province')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_villes', to='ErpBackOffice.model_personne', verbose_name='modifié par')),
            ],
            options={
                'verbose_name': 'Ville',
                'verbose_name_plural': 'Villes',
                'db_table': 'cnf_city',
            },
        ),
        migrations.CreateModel(
            name='Model_Type_periode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=250, verbose_name='Désignation')),
                ('periodicite', models.CharField(blank=True, choices=[('Week', 'Hebdomadaire'), ('Month', 'Mensuelle'), ('Quarter', 'Trimestrielle'), ('Year', 'Annuelle'), ('Other', 'Autre')], db_column='periodicity', default='', max_length=100, null=True, verbose_name='Périodicité')),
                ('nombre_par_exercice', models.IntegerField(blank=True, db_column='number_per_fiscal_year', null=True, verbose_name='Nombre par exercice')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_type_periodes', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('societe', models.ForeignKey(blank=True, db_column='company', null=True, on_delete=django.db.models.deletion.CASCADE, to='ModuleConfiguration.model_societe', verbose_name='Société')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_type_periodes', to='ErpBackOffice.model_personne', verbose_name='modifié par')),
            ],
            options={
                'verbose_name': 'Type Période',
                'verbose_name_plural': 'Types Période',
                'db_table': 'cnf_type_period',
            },
        ),
        migrations.AddField(
            model_name='model_societe',
            name='type_periode',
            field=models.ForeignKey(blank=True, db_column='period_type_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='societes', to='ModuleConfiguration.model_type_periode', verbose_name='Type de période'),
        ),
        migrations.AddField(
            model_name='model_societe',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_societes', to='ErpBackOffice.model_personne'),
        ),
        migrations.AddField(
            model_name='model_societe',
            name='ville',
            field=models.ForeignKey(blank=True, db_column='city_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_ville', verbose_name='Ville'),
        ),
        migrations.CreateModel(
            name='Model_Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(default='', max_length=100, verbose_name='Numéro')),
                ('designation', models.CharField(blank=True, max_length=250, null=True, verbose_name='Désignation')),
                ('query', models.TextField(blank=True, null=True, verbose_name='Requête')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('champs_afficher', models.TextField(blank=True, null=True, verbose_name='Champs à afficher')),
                ('visibilite', models.IntegerField(choices=[(1, 'Partager avec tous les utilisateurs'), (2, 'Partager pour mon rôle utilisateur'), (3, 'Moi uniquement')], default=1, verbose_name='Visibilité')),
                ('type_view', models.CharField(choices=[('List', 'List'), ('Chart', 'Chart'), ('Card', 'Card'), ('Pivot', 'Pivot')], default='List', max_length=100, verbose_name='Type de vue')),
                ('est_regroupe', models.BooleanField(default=False, verbose_name='Est défaut')),
                ('regr_count', models.IntegerField(default=-1, verbose_name='Numéro regroupement')),
                ('chart_view', models.CharField(blank=True, max_length=250, null=True, verbose_name='Type de vue graphique')),
                ('chart_type', models.CharField(blank=True, max_length=250, null=True, verbose_name='Type graphique')),
                ('legend_dataset', models.CharField(blank=True, max_length=250, null=True, verbose_name='Légende Dataset')),
                ('title_card', models.CharField(blank=True, max_length=250, null=True, verbose_name='Titre Card')),
                ('etat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteurs_queries', to='ErpBackOffice.model_personne', verbose_name='Auteur')),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_groupepermission', verbose_name='Rôle utilisateur')),
                ('statut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Requête BI',
                'verbose_name_plural': 'Requêtes BI',
                'db_table': 'query',
            },
        ),
        migrations.CreateModel(
            name='Model_District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('etat', models.CharField(blank=True, db_column='state', max_length=50, null=True, verbose_name='Etat')),
                ('creation_date', models.DateTimeField(auto_now_add=True, db_column='created_date', verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='updated_date', verbose_name='Date de dernière modification')),
                ('auteur', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_districts', to='ErpBackOffice.model_personne', verbose_name='Créé par')),
                ('province', models.ForeignKey(blank=True, db_column='province', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='ModuleConfiguration.model_province', verbose_name='Province')),
                ('statut', models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut')),
                ('update_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_districts', to='ErpBackOffice.model_personne', verbose_name='modifié par')),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'db_table': 'cnf_district',
            },
        ),
        migrations.AddField(
            model_name='model_contact',
            name='adress_city',
            field=models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_ville', verbose_name='Ville'),
        ),
        migrations.AddField(
            model_name='model_contact',
            name='adress_state',
            field=models.ForeignKey(blank=True, db_column='province', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_province', verbose_name='Province'),
        ),
        migrations.AddField(
            model_name='model_contact',
            name='auteur',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_contacts', to='ErpBackOffice.model_personne', verbose_name='Créé par'),
        ),
        migrations.AddField(
            model_name='model_contact',
            name='autres_adresses',
            field=models.ManyToManyField(db_column='others_adresses', to='ModuleConfiguration.Model_Adresse', verbose_name='Autres adresse'),
        ),
        migrations.AddField(
            model_name='model_contact',
            name='country',
            field=models.ForeignKey(blank=True, db_column='country', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_pays', verbose_name='Pays'),
        ),
        migrations.AddField(
            model_name='model_contact',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_contact',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_contacts', to='ErpBackOffice.model_personne', verbose_name='modifié par'),
        ),
        migrations.AddField(
            model_name='model_commune',
            name='ville',
            field=models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communes', to='ModuleConfiguration.model_ville', verbose_name='Ville'),
        ),
        migrations.AddField(
            model_name='model_adresse',
            name='adress_city',
            field=models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_ville', verbose_name='Ville'),
        ),
        migrations.AddField(
            model_name='model_adresse',
            name='adress_state',
            field=models.ForeignKey(blank=True, db_column='province', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_province', verbose_name='Province'),
        ),
        migrations.AddField(
            model_name='model_adresse',
            name='adress_township',
            field=models.ForeignKey(blank=True, db_column='township', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_commune', verbose_name='Commune'),
        ),
        migrations.AddField(
            model_name='model_adresse',
            name='auteur',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_adresses', to='ErpBackOffice.model_personne', verbose_name='Créé par'),
        ),
        migrations.AddField(
            model_name='model_adresse',
            name='country',
            field=models.ForeignKey(blank=True, db_column='country', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ModuleConfiguration.model_pays', verbose_name='Pays'),
        ),
        migrations.AddField(
            model_name='model_adresse',
            name='statut',
            field=models.ForeignKey(blank=True, db_column='status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.model_wkf_etape', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='model_adresse',
            name='update_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modificateur_adresses', to='ErpBackOffice.model_personne', verbose_name='modifié par'),
        ),
    ]
